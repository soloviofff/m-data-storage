version: "3.8"

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: mds-app
    env_file:
      - .env
    environment:
      - PORT=8080
      - SWAGGER_SERVER_URL=${SWAGGER_SERVER_URL:-http://localhost:11000}
      - DATABASE_URL=${DATABASE_URL}
      - API_TOKEN=${API_TOKEN}
      - FINALIZATION_WINDOW_HOURS=${FINALIZATION_WINDOW_HOURS}
      - SUPPORTED_TIMEFRAMES=${SUPPORTED_TIMEFRAMES}
    ports:
      - "${APP_PORT:-11000}:8080"
    depends_on:
      timescaledb:
        condition: service_healthy
    restart: unless-stopped

  timescaledb:
    image: timescale/timescaledb:latest-pg15
    container_name: mds-timescaledb-prod
    env_file:
      - .env
    ports:
      - "${DB_PORT:-5432}:5432"
    environment:
      - POSTGRES_USER=${DB_USER:-user}
      - POSTGRES_PASSWORD=${DB_PASSWORD:-password}
      - POSTGRES_DB=${DB_NAME:-m-data-storage}
      - PGDATA=/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-user} -d ${DB_NAME:-m-data-storage}"]
      interval: 5s
      timeout: 5s
      retries: 10
    volumes:
      - pgdata_prod:/var/lib/postgresql/data
      - ./docker/initdb:/docker-entrypoint-initdb.d:ro
    restart: unless-stopped

volumes:
  pgdata_prod:
    driver: local


